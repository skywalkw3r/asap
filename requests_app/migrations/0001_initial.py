# Generated by Django 4.2.20 on 2025-04-26 21:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fqdn', models.CharField(help_text='Fully Qualified Domain Name (e.g., server1.example.com)', max_length=255, unique=True)),
                ('vlan', models.CharField(choices=[('1441', '1441'), ('1443', '1443')], help_text='Select the VLAN', max_length=10)),
                ('location', models.CharField(choices=[('COS', 'COS'), ('SRS', 'SRS'), ('DFW', 'DFW')], help_text='Select the physical location', max_length=10)),
                ('primary_contact', models.EmailField(help_text='Primary Contact Email Address', max_length=255)),
                ('secondary_contact', models.CharField(blank=True, help_text='Secondary Contact Email Address (Optional)', max_length=255)),
                ('group_contact', models.CharField(blank=True, help_text='Group Contact / DL (Optional)', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes or requirements')),
                ('backup_required', models.BooleanField(default=False)),
                ('monitoring_required', models.BooleanField(default=False)),
                ('ticket_number', models.CharField(blank=True, help_text='JIRA/ServiceNow Ticket Number (Optional)', max_length=100)),
                ('os_type', models.CharField(choices=[('rhel8', 'RHEL 8'), ('rhel9', 'RHEL 9'), ('win2022', 'Windows Server 2022 Standard'), ('win2025', 'Windows Server 2025 Standard')], help_text='Select the Operating System', max_length=20)),
                ('cpu_cores', models.IntegerField(choices=[(2, '2 Cores'), (4, '4 Cores'), (8, '8 Cores')], help_text='Select the number of CPU cores')),
                ('memory_gb', models.IntegerField(choices=[(8, '8 GB'), (12, '12 GB'), (16, '16 GB'), (20, '20 GB'), (24, '24 GB'), (28, '28 GB'), (32, '32 GB')], help_text='Select the amount of RAM')),
                ('os_disk_gb', models.IntegerField(default=100, help_text='Size of the OS disk (100-500 GB)', validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(500)])),
                ('data_disk_gb', models.IntegerField(blank=True, help_text='Size of the Data disk (Optional, 100-750 GB)', null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(750)])),
                ('patching_group', models.CharField(choices=[('automatic', 'Automatic'), ('manual', 'BP Managed/Manual')], help_text='Select the patching method for this server', max_length=20)),
                ('hypervisor_type', models.CharField(choices=[('OLVM', 'OLVM')], default='OLVM', help_text='Select the hypervisor environment', max_length=10)),
                ('user_ids', models.TextField(blank=True, help_text='Enter UserIDs/Usernames needing access (comma-separated)')),
                ('terms_accepted', models.BooleanField(default=False, help_text='You must accept the terms and conditions')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved - Queued for Provisioning'), ('DENIED', 'Denied'), ('PROVISIONING', 'Provisioning in Progress'), ('COMPLETED', 'Provisioning Completed'), ('FAILED', 'Provisioning Failed')], default='PENDING', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_denied_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for IT Admins')),
                ('awx_job_id', models.IntegerField(blank=True, help_text='ID of the launched AWX Job', null=True)),
                ('approved_denied_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Server Request',
                'verbose_name_plural': 'Server Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('level', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('SUCCESS', 'Success')], default='INFO', max_length=10)),
                ('action', models.CharField(help_text='Short description of the action performed.', max_length=255)),
                ('message', models.TextField(help_text='Detailed log message.')),
                ('related_awx_job_id', models.IntegerField(blank=True, help_text='AWX Job ID related to this log entry (if applicable).', null=True)),
                ('related_request', models.ForeignKey(blank=True, help_text='The server request this log pertains to (if applicable).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='requests_app.serverrequest')),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action (if applicable).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log Entry',
                'verbose_name_plural': 'Audit Log Entries',
                'ordering': ['-timestamp'],
            },
        ),
    ]
